name: E2E Test
on:
  push:
    branches:
      - master
  pull_request:

permissions:
  checks: write

jobs:
  test:
    name: e2e
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate workspace name
        id: workspace-name
        run: echo "::set-output name=result::remote-state-action-e2e-test-${{ github.run_id }}"

      - name: Create workspace
        id: workspace
        uses:  TakeScoop/terraform-cloud-workspace-action@v2
        with:
          terraform_organization: takescoop-oss
          terraform_token: ${{ secrets.TF_TOKEN_OSS }}
          name: ${{ steps.workspace-name.outputs.result }}
          apply: "${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}"
          working_directory: test-e2e/
          execution_mode: local

      - uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_TOKEN_OSS }}

      - run: |-
          cat << EOF > test-e2e/backend.tf.json
          {
            "terraform": {
              "backend": {
                "remote": {
                  "hostname": "app.terraform.io",
                  "organization": "takescoop-oss",
                  "workspaces": {
                    "name": "${{ steps.workspace-name.outputs.result }}"
                  }
                }
              }
            }
          }
          EOF

      - name: Terraform apply
        run: terraform -chdir=test-e2e apply -auto-approve

      - name: Terraform init
        run: terraform -chdir=test-e2e init 

      - name: Run action
        id: action
        uses: ./
        with:
          workspace: remote-state-action-e2e-test
          organization: takescoop-oss
          token: ${{ secrets.TF_TOKEN_OSS }}
      
      - name: Test string
        run: test "${{ steps.action.outputs.foo }}" == "bar"
      - name: Test JSON output
        run: test "${{ fromJson(steps.action.outputs.json).foo }}" == "bar"
      - name: Test sensitive output
        run: test "${{ steps.action.outputs.sensitive }}" == "secret"
      - name: Test int
        run: test ${{ steps.action.outputs.int }} == 2
      - name: Test float
        run: test ${{ steps.action.outputs.float }} == 3.14
      - name: Test map
        run: test "${{ fromJson(steps.action.outputs.map).foo.bar }}" == "baz"
      - name: Test list
        run: test "${{ fromJson(steps.action.outputs.list)[0] }}" == "foo"        
      - name: Test set
        run: |
          test '${{ steps.action.outputs.set }}' == '["foo","bar"]' ||
            test '${{ steps.action.outputs.set }}' == '["bar","foo"]'
      - name: Test null
        run: test "${{ steps.action.outputs.null }}" == ""        
      - name: Test multiline output
        env: 
          multiline: "${{ steps.action.outputs.multiline }}"
        run: test "$multiline" == "$(printf "%s\n" "multi" "line" "output")"

      - name: Cleanup workspace
        if: always()
        env:
          TOKEN: ${{ secrets.TF_TOKEN_OSS }}
        run: |-
          curl \
            --header "Authorization: Bearer $TOKEN" \
            --header "Content-Type: application/vnd.api+json" \
            --request DELETE \
            https://app.terraform.io/api/v2/organizations/takescoop-oss/workspaces/${{ steps.workspace-name.outputs.result }}

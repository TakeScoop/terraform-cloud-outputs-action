name: E2E Test
on:
  push:
    branches:
      - master
  pull_request:

permissions:
  checks: write

jobs:
  test:
    name: e2e
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create workspace
        id: workspace
        uses:  TakeScoop/terraform-cloud-workspace-action@v2
        with:
          terraform_organization: takescoop-oss
          terraform_token: ${{ secrets.TF_TOKEN_OSS }}
          name: remote-state-action-e2e-test
          apply: "${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}"
          working_directory: test-e2e/
          execution_mode: local

      - name: Run action
        id: action
        uses: ./
        with:
          workspace: remote-state-action-e2e-test
          organization: takescoop-oss
          token: ${{ secrets.TF_TOKEN_OSS }}
      
      - name: Test simple output
        run: test "${{ steps.action.outputs.foo }}" == "bar"
      - name: Test JSON output
        run: test "${{ fromJson(steps.action.outputs.json).foo }}" == "bar"
      - name: Test sensitive output
        run: test "${{ steps.action.outputs.sensitive }}" == "secret"
      - name: Test int
        run: test ${{ steps.action.outputs.int }} == 2
      - name: Test float
        run: test ${{ steps.action.outputs.float }} == 3.14
      - name: Test map
        continue-on-error: true
        run: |
          echo  "${{ steps.action.outputs.map }}"
          test "${{ fromJson(steps.action.outputs.map).foo }}" == "bar"
      - name: Test list
        continue-on-error: true
        run: |
          echo  "${{ steps.action.outputs.list }}"
          test "${{ fromJson(steps.action.outputs.list)[0] }}" == "foo"        
      - name: Test set
        continue-on-error: true
        run: |
          echo  "${{ steps.action.outputs.set }}"
          test "${{ fromJson(steps.action.outputs.set)[0] }}" == "foo"
      - name: Test null
        run: test "${{ steps.action.outputs.null }}" == ""        
      - name: Test multiline output
        continue-on-error: true
        run: test "${{ steps.action.outputs.multiline }}" == "multi\nline\noutput"
